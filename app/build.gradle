apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'jacoco-android'
apply plugin: 'io.fabric'

android {
  buildToolsVersion = '28.0.3'
  compileSdkVersion buildVersions.compileSdk
  defaultConfig {
    applicationId "com.vmadalin.android"
    minSdkVersion buildVersions.minSdk
    targetSdkVersion buildVersions.targetSdk
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    manifestPlaceholders = [fabricApiKey:getLocalProperty("fabric.key")]
  }
  buildTypes {
    debug {
      applicationIdSuffix '.debug'
      versionNameSuffix '-DEBUG'
      testCoverageEnabled true

      ext.enableCrashlytics = false
      buildConfigField "boolean", "ENABLE_CRASHLYTICS", "false"
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

      ext.enableCrashlytics = true
      buildConfigField "boolean", "ENABLE_CRASHLYTICS", "true"
    }
  }
  buildTypes.each {
    try {
      it.buildConfigField "String", "MARVEL_BASE_URL", "\"http://gateway.marvel.com\""
      it.buildConfigField "String", "MARVEL_KEY_PUBLIC", "\"${getLocalProperty("marvel.key.public")}\""
      it.buildConfigField "String", "MARVEL_KEY_PRIVATE", "\"${getLocalProperty("marvel.key.private")}\""
    } catch (ignored) {
      throw new InvalidUserDataException("You should define 'marvel.key.public' and 'marvel.key.private' in local.properties. Visit 'https://developer.marvel.com' to obtain them.")
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  dataBinding {
    enabled = true
  }
  androidExtensions {
    experimental = true
  }
  lintOptions {
    disable 'GoogleAppIndexingWarning'
    checkAllWarnings true
    warningsAsErrors true
  }
  testOptions {
    unitTests.returnDefaultValues = true
    unitTests.all {
      jacoco {
        includeNoLocationClasses = true
      }
    }
  }
}

jacocoAndroidUnitTestReport {
  csv.enabled false
  html.enabled true
  xml.enabled true
}

dependencies {
  kaptDependencies.each { _, url -> kapt url }
  projectDependencies.each { _, url -> implementation url }
  testImplementationDependencies.each { _, url -> testImplementation url }
  androidTestImplementationDependencies.each { _, url -> androidTestImplementation url }
}

def getLocalProperty(String propertyName) {
  Properties properties = new Properties()
  properties.load(project.rootProject.file('local.properties').newDataInputStream())
  String property = properties.getProperty(propertyName)
  if (property == null) {
    throw new Exception("Not defined property")
  }
  return property
}
